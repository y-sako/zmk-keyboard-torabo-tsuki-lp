#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

/ {
    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <28 29>;
            layers = <2>;
        };
    };

    macros {
        mission_control: mission_control {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "MISSION_CONTROL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans                                       &trans       &trans  &trans     &trans   &trans     &trans
&trans  &kp Q      &kp W     &kp E     &kp R      &kp T                                        &kp Y        &kp U   &kp I      &kp O    &kp P      &trans
&trans  &kp A      &kp S     &kp D     &kp F      &kp G        &trans          &trans          &kp H        &kp J   &kp K      &kp L    &kp SEMI   &trans
&trans  &kp Z      &kp X     &kp C     &kp V      &kp B        &kp RG(GLOBE)   &kp LANGUAGE_1  &kp N        &kp M   &kp COMMA  &kp DOT  &kp SLASH  &trans
&trans  &kp LCTRL  &kp LGUI  &kp LALT  &lt 2 TAB  &lt 1 SPACE  &kp LEFT_SHIFT  &kp BACKSPACE   &lt 3 ENTER  &trans  &trans     &kp UP   &kp DOWN   &trans
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans     &trans     &trans                  &trans  &trans    &trans      &trans     &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans                  &trans  &trans    &kp LC(UP)  &trans     &trans  &trans
&trans  &trans  &trans  &mkp RCLK  &mkp LCLK  &trans  &trans  &trans  &trans  &mkp MB1  &kp UP      &mkp MB2   &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN    &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans  &trans  &trans    &trans      &trans     &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans           &trans             &trans     &trans      &trans                                 &trans            &trans                &trans                 &trans            &trans             &trans
&trans  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH   &kp DOLLAR  &kp PERCENT                            &kp SINGLE_QUOTE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans  &kp N1           &kp N2             &kp N3     &kp N4      &kp N5       &trans     &trans         &kp QUESTION      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GRAVE         &kp COLON          &trans
&trans  &kp N6           &kp N7             &kp N8     &kp N9      &kp N0       &kp CARET  &kp BACKSLASH  &kp QUESTION      &kp QUESTION          &kp LESS_THAN          &kp GREATER_THAN  &kp QUESTION       &trans
&trans  &kp PLUS         &kp MINUS          &kp SLASH  &trans      &trans       &trans     &kp ASTERISK   &kp EQUAL         &none                 &none                  &kp TILDE         &kp UNDERSCORE     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans   &trans   &trans        &trans        &trans                      &trans            &trans        &trans        &trans        &trans        &trans
&trans  &kp F1   &kp F2   &kp F3        &kp F4        &kp F5                      &kp HOME          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans
&trans  &kp F6   &kp F7   &kp F8        &kp F9        &kp F10     &trans  &trans  &kp LEFT          &kp DOWN      &kp UP_ARROW  &kp RIGHT     &kp TAB       &trans
&trans  &kp F11  &kp F12  &out OUT_USB  &out OUT_BLE  &bt BT_NXT  &trans  &trans  &kp SINGLE_QUOTE  &kp DQT       &kp GRAVE     &kp TILDE     &kp PIPE      &trans
&trans  &trans   &trans   &trans        &kp DELETE    &kp TAB     &trans  &trans  &trans            &trans        &trans        &trans        &trans        &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
